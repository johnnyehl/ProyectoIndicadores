//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2014/02/12 - 11:01:10
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Text;
using System.Linq;
using ServiciosIndicadoresEntities;

namespace ServicioIndicadoresDTO
{

    /// <summary>
    /// Assembler for <see cref="USUARIOS"/> and <see cref="USUARIOSDTO"/>.
    /// </summary>
    public static partial class USUARIOSAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="USUARIOSDTO"/> converted from <see cref="USUARIOS"/>.</param>
        static partial void OnDTO(this USUARIOS entity, USUARIOSDTO dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="USUARIOS"/> converted from <see cref="USUARIOSDTO"/>.</param>
        static partial void OnEntity(this USUARIOSDTO dto, USUARIOS entity);

        /// <summary>
        /// Converts this instance of <see cref="USUARIOSDTO"/> to an instance of <see cref="USUARIOS"/>.
        /// </summary>
        /// <param name="dto"><see cref="USUARIOSDTO"/> to convert.</param>
        public static USUARIOS ToEntity(this USUARIOSDTO dto)
        {
            if (dto == null) return null;

            var entity = new USUARIOS();

            entity.IDUSUARIO = dto.IDUSUARIO;
            entity.CODUSUARIO = dto.CODUSUARIO;
            entity.APEPAT = dto.APEPAT;
            entity.APEMAT = dto.APEMAT;
            entity.NOMBRE = dto.NOMBRE;
            entity.EMAIL = dto.EMAIL;
            entity.DIRECCION = dto.DIRECCION;
            entity.DNI = dto.DNI;
            entity.PASSWORD = dto.PASSWORD;
            entity.IDROL = dto.IDROL;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="USUARIOS"/> to an instance of <see cref="USUARIOSDTO"/>.
        /// </summary>
        /// <param name="entity"><see cref="USUARIOS"/> to convert.</param>
        public static USUARIOSDTO ToDTO(this USUARIOS entity)
        {
            if (entity == null) return null;

            var dto = new USUARIOSDTO();

            dto.IDUSUARIO = entity.IDUSUARIO;
            dto.CODUSUARIO = entity.CODUSUARIO;
            dto.APEPAT = entity.APEPAT;
            dto.APEMAT = entity.APEMAT;
            dto.NOMBRE = entity.NOMBRE;
            dto.EMAIL = entity.EMAIL;
            dto.DIRECCION = entity.DIRECCION;
            dto.DNI = entity.DNI;
            dto.PASSWORD = entity.PASSWORD;
            dto.IDROL = entity.IDROL;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="USUARIOSDTO"/> to an instance of <see cref="USUARIOS"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<USUARIOS> ToEntities(this IEnumerable<USUARIOSDTO> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="USUARIOS"/> to an instance of <see cref="USUARIOSDTO"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<USUARIOSDTO> ToDTOs(this IEnumerable<USUARIOS> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
