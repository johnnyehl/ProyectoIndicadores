//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2014/02/12 - 11:01:10
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Text;
using System.Linq;
using ServiciosIndicadoresEntities;

namespace ServicioIndicadoresDTO
{

    /// <summary>
    /// Assembler for <see cref="GESTION_CONF_VARIABLES"/> and <see cref="GESTION_CONF_VARIABLESDTO"/>.
    /// </summary>
    public static partial class GESTION_CONF_VARIABLESAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="GESTION_CONF_VARIABLESDTO"/> converted from <see cref="GESTION_CONF_VARIABLES"/>.</param>
        static partial void OnDTO(this GESTION_CONF_VARIABLES entity, GESTION_CONF_VARIABLESDTO dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="GESTION_CONF_VARIABLES"/> converted from <see cref="GESTION_CONF_VARIABLESDTO"/>.</param>
        static partial void OnEntity(this GESTION_CONF_VARIABLESDTO dto, GESTION_CONF_VARIABLES entity);

        /// <summary>
        /// Converts this instance of <see cref="GESTION_CONF_VARIABLESDTO"/> to an instance of <see cref="GESTION_CONF_VARIABLES"/>.
        /// </summary>
        /// <param name="dto"><see cref="GESTION_CONF_VARIABLESDTO"/> to convert.</param>
        public static GESTION_CONF_VARIABLES ToEntity(this GESTION_CONF_VARIABLESDTO dto)
        {
            if (dto == null) return null;

            var entity = new GESTION_CONF_VARIABLES();

            entity.IDVARIABLE = dto.IDVARIABLE;
            entity.CODVAR = dto.CODVAR;
            entity.NOMVAR = dto.NOMVAR;
            entity.CALC = dto.CALC;
            entity.FORMULA = dto.FORMULA;
            entity.UNIDAD = dto.UNIDAD;
            entity.ESTADO = dto.ESTADO;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="GESTION_CONF_VARIABLES"/> to an instance of <see cref="GESTION_CONF_VARIABLESDTO"/>.
        /// </summary>
        /// <param name="entity"><see cref="GESTION_CONF_VARIABLES"/> to convert.</param>
        public static GESTION_CONF_VARIABLESDTO ToDTO(this GESTION_CONF_VARIABLES entity)
        {
            if (entity == null) return null;

            var dto = new GESTION_CONF_VARIABLESDTO();

            dto.IDVARIABLE = entity.IDVARIABLE;
            dto.CODVAR = entity.CODVAR;
            dto.NOMVAR = entity.NOMVAR;
            dto.CALC = entity.CALC;
            dto.FORMULA = entity.FORMULA;
            dto.UNIDAD = entity.UNIDAD;
            dto.ESTADO = entity.ESTADO;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="GESTION_CONF_VARIABLESDTO"/> to an instance of <see cref="GESTION_CONF_VARIABLES"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<GESTION_CONF_VARIABLES> ToEntities(this IEnumerable<GESTION_CONF_VARIABLESDTO> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="GESTION_CONF_VARIABLES"/> to an instance of <see cref="GESTION_CONF_VARIABLESDTO"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<GESTION_CONF_VARIABLESDTO> ToDTOs(this IEnumerable<GESTION_CONF_VARIABLES> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
