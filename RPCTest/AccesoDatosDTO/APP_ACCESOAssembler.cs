//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2014/02/08 - 23:05:45
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Text;
using System.Linq;
using ADODBFactory;

namespace AccesoDatosDTO
{

    /// <summary>
    /// Assembler for <see cref="APP_ACCESO"/> and <see cref="APP_ACCESODTO"/>.
    /// </summary>
    public static partial class APP_ACCESOAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="APP_ACCESODTO"/> converted from <see cref="APP_ACCESO"/>.</param>
        static partial void OnDTO(this APP_ACCESO entity, APP_ACCESODTO dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="APP_ACCESO"/> converted from <see cref="APP_ACCESODTO"/>.</param>
        static partial void OnEntity(this APP_ACCESODTO dto, APP_ACCESO entity);

        /// <summary>
        /// Converts this instance of <see cref="APP_ACCESODTO"/> to an instance of <see cref="APP_ACCESO"/>.
        /// </summary>
        /// <param name="dto"><see cref="APP_ACCESODTO"/> to convert.</param>
        public static APP_ACCESO ToEntity(this APP_ACCESODTO dto)
        {
            if (dto == null) return null;

            var entity = new APP_ACCESO();

            entity.IDACCESOAPP = dto.IDACCESOAPP;
            entity.IDAPP = dto.IDAPP;
            entity.IDROL = dto.IDROL;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="APP_ACCESO"/> to an instance of <see cref="APP_ACCESODTO"/>.
        /// </summary>
        /// <param name="entity"><see cref="APP_ACCESO"/> to convert.</param>
        public static APP_ACCESODTO ToDTO(this APP_ACCESO entity)
        {
            if (entity == null) return null;

            var dto = new APP_ACCESODTO();

            dto.IDACCESOAPP = entity.IDACCESOAPP;
            dto.IDAPP = entity.IDAPP;
            dto.IDROL = entity.IDROL;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="APP_ACCESODTO"/> to an instance of <see cref="APP_ACCESO"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<APP_ACCESO> ToEntities(this IEnumerable<APP_ACCESODTO> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="APP_ACCESO"/> to an instance of <see cref="APP_ACCESODTO"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<APP_ACCESODTO> ToDTOs(this IEnumerable<APP_ACCESO> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
